plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id "com.google.protobuf" version "0.8.8"
}

group 'org.athenian'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven { url 'https://jitpack.io' }
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
    mavenCentral()
}

def grpcVersion = '1.20.0'
def protocVersion = '3.7.1'
def junitVersion = '4.12'
def coroutines_version = '1.1.0'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-debug:$coroutines_version"
    
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"

    implementation 'com.github.googleapis.gax-kotlin:kgax-grpc:master-SNAPSHOT'

    testImplementation "junit:junit:${junitVersion}"
    testCompile "junit:junit:${junitVersion}"
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'src/main/kotlin'
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/client'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }

    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }

        client { artifact = 'com.github.googleapis:gapic-generator-kotlin:master-SNAPSHOT:core@jar' }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }

        all().each { task ->
            task.plugins {
                client {}
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ['-XXLanguage:+InlineClasses']
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}